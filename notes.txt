
Card.getSaveableCard()

CardContainer.getSaveableCards()

class Saved {
  constructor() {
    this.seed = gameState[rules.Name].seed;
    this.redeals = stock.redeals;
    this.moves = tallyMan.count;
    this.undo = undoer.makeCopy();
    this.containers = [];
    for ( let i=0; i<cardContainers.length; i++ ) {
      this.containers[i] = cardContainers[i].getSaveableCards();
    }
  }
}

gameState[rules.Name].saved = new Saved();

CardContainer.load() works by destroying all cards and making new ones

Class Mover

const tallyMan = new Mover;

class Undoer

function GameManager:undoPush()
  table.insert(self.undoStack, self:_getSavedGame())
  _G.OPSOLE_UI.statusbar:setMoves(#self.undoStack)
  -- trace('undo push now', #self.undoStack)
end

function GameManager:undoPop()
  local undo = table.remove(self.undoStack)
  _G.OPSOLE_UI.statusbar:setMoves(#self.undoStack)
  -- trace('undo pop now', #self.undoStack)
  return undo
end

